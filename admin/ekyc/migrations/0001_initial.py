# Generated by Django 3.2.9 on 2021-12-16 18:03

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import ekyc.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, null=True)),
                ('name', models.CharField(max_length=50, null=True)),
                ('description', models.CharField(max_length=50, null=True)),
                ('credit', models.CharField(choices=[('1', '1'), ('1.5', '1.5'), ('3', '3')], max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(null=True, upload_to='')),
                ('student_type', models.CharField(choices=[('Undergraduate', 'Undergraduate'), ('Graduate', 'Graduate')], max_length=50, null=True)),
                ('name', models.CharField(max_length=50, null=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('contact', models.CharField(max_length=50, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Others', 'Others')], max_length=50, null=True)),
                ('nid', models.CharField(max_length=50, null=True)),
                ('dob', models.CharField(max_length=50, null=True)),
                ('present_address', models.CharField(max_length=50, null=True)),
                ('permanent_address', models.CharField(max_length=50, null=True)),
                ('city', models.CharField(choices=[('Dhaka', 'Dhaka'), ('Chittagong', 'Chittagong'), ('Khulna', 'Khulna'), ('Rajshahi', 'Rajshahi'), ('Sylhet', 'Sylhet'), ('Mymensingh', 'Mymensingh'), ('Barisal', 'Barisal'), ('Rangpur', 'Rangpur'), ('Comilla', 'Comilla'), ('Narayanganj', 'Narayanganj'), ('Gazipur', 'Gazipur')], max_length=50, null=True)),
                ('zip', models.CharField(max_length=50, null=True)),
                ('hight', models.CharField(max_length=50, null=True)),
                ('weight', models.CharField(max_length=50, null=True)),
                ('bg', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=50, null=True)),
                ('medical_records', models.CharField(max_length=50, null=True)),
                ('father_name', models.CharField(max_length=50, null=True)),
                ('mother_name', models.CharField(max_length=50, null=True)),
                ('father_contact', models.CharField(max_length=50, null=True)),
                ('mother_contact', models.CharField(max_length=50, null=True)),
                ('parents_address', models.CharField(max_length=50, null=True)),
                ('parents_finantial_info', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cgpa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.ManyToManyField(to='ekyc.Course')),
                ('grade', models.ManyToManyField(to='ekyc.Grade')),
                ('name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ekyc.student')),
                ('semester', models.ManyToManyField(to='ekyc.Semester')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_varified', models.BooleanField(default=False)),
                ('bin', models.CharField(max_length=50, null=True)),
                ('name', models.CharField(max_length=50, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('contact', models.CharField(max_length=50, null=True)),
                ('file', models.FileField(null=True, upload_to='')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', ekyc.manager.CustomerManager()),
            ],
        ),
    ]
